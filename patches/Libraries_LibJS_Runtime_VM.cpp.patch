diff --git a/Libraries/LibJS/Runtime/VM.cpp b/Libraries/LibJS/Runtime/VM.cpp
index 5ce09f0d40..8f92cbd2c7 100644
--- a/Libraries/LibJS/Runtime/VM.cpp
+++ b/Libraries/LibJS/Runtime/VM.cpp
@@ -579,6 +579,7 @@ ThrowCompletionOr<void> VM::link_and_eval_module(CyclicModule& module)
     return {};
 }
 
+#ifndef LIBJS_SHARED
 static ByteString resolve_module_filename(StringView filename, StringView module_type)
 {
     auto extensions = Vector<StringView, 2> { "js"sv, "mjs"sv };
@@ -601,10 +602,13 @@ static ByteString resolve_module_filename(StringView filename, StringView module
     }
     return filename;
 }
+#endif
 
 // 16.2.1.8 HostLoadImportedModule ( referrer, specifier, hostDefined, payload ), https://tc39.es/ecma262/#sec-HostLoadImportedModule
 void VM::load_imported_module(ImportedModuleReferrer referrer, ModuleRequest const& module_request, GC::Ptr<GraphLoadingState::HostDefined>, ImportedModulePayload payload)
 {
+#ifndef LIBJS_SHARED
+
     // An implementation of HostLoadImportedModule must conform to the following requirements:
     //
     // - The host environment must perform FinishLoadingImportedModule(referrer, specifier, payload, result),
@@ -740,6 +744,7 @@ void VM::load_imported_module(ImportedModuleReferrer referrer, ModuleRequest con
     }();
 
     finish_loading_imported_module(referrer, module_request, payload, module);
+#endif
 }
 
 void VM::push_execution_context(ExecutionContext& context)
