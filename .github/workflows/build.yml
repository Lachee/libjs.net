# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  windows:
    runs-on: windows-latest

    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    steps:
      - uses: actions/checkout@v4

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
            core.exportVariable('ACTIONS_RUNTIME_URL', process.env.ACTIONS_RUNTIME_URL || '');

      - name: Install LLVM/Clang
        shell: pwsh
        run: .github/install-llvm.ps1 "C:/Program Files/LLVM"
        #shell: cmd
        #run: choco install llvm -y --version 19.1.5 

      - name: Verify LLVM/Clang Installation
        shell: cmd
        run: |
          where clang-cl.exe
          clang-cl --version
          ls -al "C:/Program Files/LLVM"
          ls -al "C:/Program Files/LLVM/lib"
          ls -al "C:/Program Files/LLVM/lib/cmake"
          ls -al "C:/Program Files/LLVM/lib/cmake/clang"

      - name: Install Ninja
        shell: cmd
        run: choco install ninja -y

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Initialize
        shell: cmd
        run: initialize.bat

      - name: Configure CMAKE
        shell: cmd
        run: cmake --preset windows . -DClang_DIR="C:/Program Files/LLVM/lib/cmake/clang"

      - name: Build CMAKE
        shell: cmd
        run: cmake --build Build/release

      - name: Build .NET
        shell: cmd
        working-directory: library
        run: dotnet build -o ../bin

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: window-artifacts
          path: bin/

  linux:
    runs-on: ubuntu-24.04

    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4.1.0

      - name: "Install Dependencies"
        shell: bash
        run: |
          set -e

          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository 'deb http://apt.llvm.org/noble/ llvm-toolchain-noble-18 main'

          sudo apt-get update -y
          sudo apt-get install -y autoconf autoconf-archive automake build-essential ccache clang-18 clang++-18 cmake curl fonts-liberation2 \
              gcc-13 g++-13 libegl1-mesa-dev libgl1-mesa-dev libpulse-dev libssl-dev \
              libstdc++-13-dev lld-18 nasm ninja-build tar unzip zip

          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-18 100
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-18 100
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 100

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
            core.exportVariable('ACTIONS_RUNTIME_URL', process.env.ACTIONS_RUNTIME_URL || '');

      - name: Initialize
        shell: bash
        run: ./initialize.sh

      - name: Configure CMAKE
        shell: cmd
        run: cmake --preset default .

      - name: Build CMAKE
        shell: cmd
        run: cmake --build Build/release

      - name: Build .NET
        shell: cmd
        working-directory: library
        run: dotnet build -o ../bin

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-24-artifacts
          path: bin/
